Magia is available at https://github.com/pulp-platform/MAGIA.git
please run "source setup_env.sh" in the magia folder before running this script
and make sure the risc-v objdump binary is visible on path using "which riscv32-unknown-elf-objdump".
mkdir -p ../work/sw/tests/test_mm_ws.c
cp ./build/bin/test_mm_ws ../work/sw/tests/test_mm_ws.c/verif
objcopy --srec-len 1 --output-target=srec ../work/sw/tests/test_mm_ws.c/verif ../work/sw/tests/test_mm_ws.c/verif.s19
scripts/parse_s19.pl ../work/sw/tests/test_mm_ws.c/verif.s19 > ../work/sw/tests/test_mm_ws.c/verif.txt
python3 scripts/s19tomem.py ../work/sw/tests/test_mm_ws.c/verif.txt ../work/sw/tests/test_mm_ws.c/stim_instr.txt ../work/sw/tests/test_mm_ws.c/stim_data.txt
cd ../work/sw/tests/test_mm_ws.c													&& \
cp -sf ../../../../modelsim.ini modelsim.ini    				&& \
ln -sfn ../../../../work work         			
riscv32-unknown-elf-objdump -d -S ../work/sw/tests/test_mm_ws.c/verif > ../work/sw/tests/test_mm_ws.c/verif.dump
riscv32-unknown-elf-objdump -d -l -s ../work/sw/tests/test_mm_ws.c/verif > ../work/sw/tests/test_mm_ws.c/verif.objdump
python3 scripts/objdump2itb.py ../work/sw/tests/test_mm_ws.c/verif.objdump > ../work/sw/tests/test_mm_ws.c/verif.itb
cd /scratch/visachi/magia_sdk/profiling/MAGIA 												&& \
make run test=test_mm_ws gui=0 mesh_dv=1
make[1]: Entering directory `/scratch/visachi/magia_sdk/profiling/MAGIA'
cd /scratch/visachi/magia_sdk/profiling/MAGIA//work/sw/tests/test_mm_ws.c;                                                                \
questa-2025.1 vsim -c vopt_tb -t 1ns -suppress 3009 -do "run -a"                               \
+INST_HEX=stim_instr.txt                                                                    \
+DATA_HEX=stim_data.txt                                                                    \
+INST_ENTRY=0xCC000000                                                                    \
+DATA_ENTRY=0xCC010000                                                                    \
+BOOT_ADDR=0xCC000080                                                                      \
 +log_file_0=./core_0_traces.log   +log_file_1=./core_1_traces.log   +log_file_2=./core_2_traces.log   +log_file_3=./core_3_traces.log                                                                                             \
+itb_file=/scratch/visachi/magia_sdk/profiling/MAGIA//work/sw/tests/test_mm_ws.c/verif.itb
Reading pref.tcl

# 2025.1_2

# vsim -c vopt_tb -t 1ns -suppress 3009 -do "run -a" "+INST_HEX=stim_instr.txt" "+DATA_HEX=stim_data.txt" "+INST_ENTRY=0xCC000000" "+DATA_ENTRY=0xCC010000" "+BOOT_ADDR=0xCC000080" "+log_file_0=./core_0_traces.log" "+log_file_1=./core_1_traces.log" "+log_file_2=./core_2_traces.log" "+log_file_3=./core_3_traces.log" "+itb_file=/scratch/visachi/magia_sdk/profiling/MAGIA//work/sw/tests/test_mm_ws.c/verif.itb" 
# Start time: 14:14:39 on Sep 16,2025
# //  Questa Sim-64
# //  Version 2025.1_2 linux_x86_64 Apr  7 2025
# //
# // Unpublished work. Copyright 2025 Siemens
# //
# // This material contains trade secrets or otherwise confidential information
# // owned by Siemens Industry Software Inc. or its affiliates (collectively,
# // "SISW"), or its licensors. Access to and use of this information is strictly
# // limited as set forth in the Customer's applicable agreements with SISW.
# //
# // This material may not be copied, distributed, or otherwise disclosed outside
# // of the Customer's facilities without the express written permission of SISW,
# // and may not be used in any way not expressly authorized by SISW.
# //
# Loading sv_std.std
# Loading work.axi_pkg(fast)
# Loading work.magia_pkg(fast)
# Loading work.magia_tb_pkg(fast)
# Loading work.magia_tb(fast)
# Loading work.floo_pkg(fast)
# Loading work.floo_axi_mesh_32x32_noc_pkg(fast)
# Loading work.floo_axi_mesh_16x16_noc_pkg(fast)
# Loading work.floo_axi_mesh_8x8_noc_pkg(fast)
# Loading work.floo_axi_mesh_4x4_noc_pkg(fast)
# Loading work.floo_axi_mesh_2x2_noc_pkg(fast)
# Loading work.idma_pkg(fast)
# Loading work.cf_math_pkg(fast)
# Loading work.obi_pkg(fast)
# Loading work.fpnew_pkg(fast)
# Loading work.magia_tile_pkg(fast)
# Loading work.magia_noc_pkg(fast)
# Loading work.magia_tile_tb_pkg(fast)
# Loading work.magia_fixture(fast)
# Loading work.magia(fast)
# Loading work.snitch_icache_pkg(fast)
# Loading work.fpu_ss_pkg(fast)
# Loading work.cv32e40x_pkg(fast)
# Loading work.hwpe_stream_package(fast)
# Loading work.hci_package(fast)
# Loading work.redmule_pkg(fast)
# Loading work.magia_tile(fast)
# Loading work.data2obi_req(fast)
# Loading work.obi2data_rsp(fast)
# Loading work.obi2hci_req(fast)
# Loading work.hci2obi_rsp(fast)
# Loading work.obi_to_axi(fast)
# Loading work.fifo_v3(fast)
# Loading work.fifo_v3(fast__1)
# Loading work.instr2cache_req(fast)
# Loading work.cache2instr_rsp(fast)
# Loading work.obi2hci_req(fast__1)
# Loading work.hci2obi_rsp(fast__1)
# Loading work.axi_to_obi(fast)
# Loading work.axi_demux_simple(fast)
# Loading work.counter(fast)
# Loading work.delta_counter(fast)
# Loading work.rr_arb_tree(fast)
# Loading work.lzc(fast)
# Loading work.axi_to_detailed_mem_user(fast)
# Loading work.stream_mux(fast)
# Loading work.stream_fork(fast)
# Loading work.stream_fifo(fast)
# Loading work.fifo_v3(fast__2)
# Loading work.stream_fifo(fast__1)
# Loading work.fifo_v3(fast__3)
# Loading work.stream_to_mem(fast)
# Loading work.stream_fifo(fast__2)
# Loading work.fifo_v3(fast__4)
# Loading work.mem_to_banks_detailed(fast)
# Loading work.stream_fifo(fast__3)
# Loading work.fifo_v3(fast__5)
# Loading work.fifo_v3(fast__6)
# Loading work.stream_fifo(fast__4)
# Loading work.fifo_v3(fast__7)
# Loading work.stream_join(fast)
# Loading work.stream_join_dynamic(fast)
# Loading work.stream_fork_dynamic(fast)
# Loading work.stream_fork(fast__1)
# Loading work.axi_to_detailed_mem_user(fast__1)
# Loading work.stream_mux(fast__1)
# Loading work.stream_fifo(fast__5)
# Loading work.fifo_v3(fast__8)
# Loading work.stream_to_mem(fast__1)
# Loading work.stream_fifo(fast__6)
# Loading work.fifo_v3(fast__9)
# Loading work.mem_to_banks_detailed(fast__1)
# Loading work.stream_fifo(fast__7)
# Loading work.fifo_v3(fast__10)
# Loading work.obi_mux(fast)
# Loading work.rr_arb_tree(fast__1)
# Loading work.fifo_v3(fast__11)
# Loading work.tc_clk_gating(fast)
# Loading work.cv32e40x_if_xif(fast__1)
# Loading work.cv32e40x_if_xif(fast__2)
# Loading work.cv32e40x_if_xif(fast__3)
# Loading work.hwpe_ctrl_package(fast)
# Loading work.redmule_top(fast)
# Loading work.hci_core_intf(fast__4)
# Loading work.hwpe_ctrl_intf_periph(fast__1)
# Loading work.redmule_inst_decoder(fast)
# Loading work.tc_clk_gating(fast__1)
# Loading work.hwpe_stream_intf_stream(fast__1)
# Loading work.hwpe_stream_intf_stream(fast__2)
# Loading work.hwpe_stream_intf_stream(fast__3)
# Loading work.redmule_streamer(fast)
# Loading work.hci_core_assign_sv_unit(fast)
# Loading work.hci_core_assign(fast)
# Loading work.hci_core_mux_dynamic_sv_unit(fast)
# Loading work.hci_core_mux_dynamic(fast)
# Loading work.hci_core_sink_sv_unit(fast)
# Loading work.hci_core_sink(fast)
# Loading work.hwpe_stream_intf_stream(fast__4)
# Loading work.hwpe_stream_intf_stream(fast__5)
# Loading work.hci_core_intf(fast__7)
# Loading work.hwpe_stream_addressgen_v3_sv_unit(fast)
# Loading work.hwpe_stream_addressgen_v3(fast)
# Loading work.hwpe_stream_fifo_sv_unit(fast)
# Loading work.hwpe_stream_fifo(fast)
# Loading work.hci_core_assign(fast__1)
# Loading work.hci_core_intf(fast__2)
# Loading work.hci_core_intf(fast__8)
# Loading work.redmule_castout_sv_unit(fast)
# Loading work.redmule_castout(fast)
# Loading work.fpnew_cast_multi(fast)
# Loading work.fpnew_classifier(fast)
# Loading work.fpnew_classifier(fast__1)
# Loading work.fpnew_classifier(fast__2)
# Loading work.lzc(fast__1)
# Loading work.fpnew_rounding(fast)
# Loading work.hci_core_fifo_sv_unit(fast)
# Loading work.hci_core_fifo(fast)
# Loading work.hwpe_stream_intf_stream(fast__6)
# Loading work.hwpe_stream_intf_stream(fast__7)
# Loading work.hwpe_stream_intf_stream(fast__8)
# Loading work.hwpe_stream_intf_stream(fast__9)
# Loading work.hwpe_stream_fifo(fast__1)
# Loading work.hwpe_stream_fifo(fast__2)
# Loading work.hci_core_assign(fast__2)
# Loading work.hci_core_mux_dynamic(fast__1)
# Loading work.redmule_castin_sv_unit(fast)
# Loading work.redmule_castin(fast)
# Loading work.hci_core_source_sv_unit(fast)
# Loading work.hci_core_source(fast)
# Loading work.hwpe_stream_intf_stream(fast__10)
# Loading work.hwpe_stream_intf_stream(fast__11)
# Loading work.hwpe_stream_addressgen_v3(fast__1)
# Loading work.hwpe_stream_fifo(fast__3)
# Loading work.hwpe_stream_intf_stream(fast__12)
# Loading work.hwpe_stream_intf_stream(fast__13)
# Loading work.hwpe_stream_fifo(fast__4)
# Loading work.hwpe_stream_assign_sv_unit(fast)
# Loading work.hwpe_stream_assign(fast)
# Loading work.hwpe_stream_fifo(fast__5)
# Loading work.hwpe_stream_fifo(fast__6)
# Loading work.redmule_x_buffer(fast)
# Loading work.redmule_w_buffer(fast)
# Loading work.redmule_z_buffer(fast)
# Loading work.redmule_engine(fast)
# Loading work.redmule_row(fast)
# Loading work.redmule_ce(fast)
# Loading work.cluster_clock_gating(fast)
# Loading work.tc_clk_gating(fast__2)
# Loading work.redmule_noncomp(fast)
# Loading work.fpnew_classifier(fast__3)
# Loading work.redmule_fma(fast)
# Loading work.fpnew_classifier(fast__4)
# Loading work.lzc(fast__2)
# Loading work.fpnew_rounding(fast__1)
# Loading work.redmule_noncomp(fast__1)
# Loading work.redmule_ctrl_sv_unit(fast)
# Loading work.redmule_ctrl(fast)
# Loading work.hwpe_ctrl_slave(fast)
# Loading work.hwpe_ctrl_regfile(fast)
# Loading work.hwpe_ctrl_regfile_latch_test_wrap(fast)
# Loading work.hwpe_ctrl_regfile_ff(fast)
# Loading work.redmule_tiler(fast)
# Loading work.hwpe_ctrl_seq_mult(fast)
# Loading work.hwpe_ctrl_seq_mult(fast__1)
# Loading work.redmule_scheduler(fast)
# Loading work.cv32e40x_wrapper(fast)
# Loading work.cv32e40x_core_log(fast)
# Loading work.cv32e40x_rvfi_pkg(fast)
# Loading work.cv32e40x_rvfi(fast)
# Loading work.cv32e40x_rvfi_instr_obi(fast)
# Loading work.cv32e40x_rvfi_data_obi(fast)
# Loading work.cv32e40x_rvfi_sim_trace(fast)
# Loading work.cv32e40x_core(fast)
# Loading work.cv32e40x_if_c_obi(fast__1)
# Loading work.cv32e40x_if_c_obi(fast__2)
# Loading work.cv32e40x_sleep_unit(fast)
# Loading work.cv32e40x_clock_gate(fast)
# Loading work.cv32e40x_if_stage(fast)
# Loading work.cv32e40x_prefetch_unit(fast)
# Loading work.cv32e40x_prefetcher(fast)
# Loading work.cv32e40x_alignment_buffer(fast)
# Loading work.cv32e40x_mpu(fast)
# Loading work.cv32e40x_pma(fast)
# Loading work.cv32e40x_instr_obi_interface(fast)
# Loading work.cv32e40x_compressed_decoder(fast)
# Loading work.cv32e40x_sequencer(fast)
# Loading work.cv32e40x_id_stage(fast)
# Loading work.cv32e40x_pc_target(fast)
# Loading work.cv32e40x_decoder(fast)
# Loading work.cv32e40x_i_decoder(fast)
# Loading work.cv32e40x_a_decoder(fast)
# Loading work.cv32e40x_b_decoder(fast)
# Loading work.cv32e40x_m_decoder(fast)
# Loading work.cv32e40x_ex_stage(fast)
# Loading work.cv32e40x_alu(fast)
# Loading work.cv32e40x_ff_one(fast)
# Loading work.cv32e40x_alu_b_cpop(fast)
# Loading work.cv32e40x_div(fast)
# Loading work.cv32e40x_mult(fast)
# Loading work.cv32e40x_load_store_unit(fast)
# Loading work.cv32e40x_wpt(fast)
# Loading work.cv32e40x_mpu(fast__1)
# Loading work.cv32e40x_pma(fast__1)
# Loading work.cv32e40x_align_check(fast)
# Loading work.cv32e40x_lsu_response_filter(fast)
# Loading work.cv32e40x_write_buffer(fast)
# Loading work.cv32e40x_data_obi_interface(fast)
# Loading work.cv32e40x_wb_stage(fast)
# Loading work.cv32e40x_cs_registers(fast)
# Loading work.cv32e40x_csr(fast)
# Loading work.cv32e40x_csr(fast__1)
# Loading work.cv32e40x_csr(fast__2)
# Loading work.cv32e40x_csr(fast__3)
# Loading work.cv32e40x_csr(fast__4)
# Loading work.cv32e40x_csr(fast__5)
# Loading work.cv32e40x_csr(fast__6)
# Loading work.cv32e40x_csr(fast__7)
# Loading work.cv32e40x_debug_triggers(fast)
# Loading work.cv32e40x_csr(fast__8)
# Loading work.cv32e40x_controller(fast)
# Loading work.cv32e40x_controller_fsm(fast)
# Loading work.cv32e40x_controller_bypass(fast)
# Loading work.cv32e40x_int_controller(fast)
# Loading work.cv32e40x_register_file_wrapper(fast)
# Loading work.cv32e40x_register_file(fast)
# Loading work.obi_atop_resolver(fast)
# Loading work.lzc(fast__3)
# Loading work.spill_register(fast)
# Loading work.spill_register_flushable(fast)
# Loading work.fifo_v3(fast__12)
# Loading work.obi_cut(fast)
# Loading work.spill_register(fast__1)
# Loading work.spill_register_flushable(fast__1)
# Loading work.spill_register(fast__2)
# Loading work.spill_register_flushable(fast__2)
# Loading work.obi_xbar(fast)
# Loading work.addr_decode(fast)
# Loading work.addr_decode_dync(fast)
# Loading work.obi_demux(fast)
# Loading work.hci_interconnect_sv_unit(fast)
# Loading work.hci_interconnect(fast)
# Loading work.hci_log_interconnect_l2_sv_unit(fast)
# Loading work.hci_log_interconnect_l2(fast)
# Loading work.XBAR_L2(fast)
# Loading work.ResponseBlock_L2(fast)
# Loading work.ResponseTree_L2(fast)
# Loading work.FanInPrimitive_Resp_L2(fast)
# Loading work.AddressDecoder_Req_L2(fast)
# Loading work.ResponseBlock_L2(fast__1)
# Loading work.AddressDecoder_Req_L2(fast__1)
# Loading work.ResponseBlock_L2(fast__2)
# Loading work.AddressDecoder_Req_L2(fast__2)
# Loading work.RequestBlock_L2_2CH(fast)
# Loading work.ArbitrationTree_L2(fast)
# Loading work.FanInPrimitive_Req_L2(fast)
# Loading work.RR_Flag_Req_L2(fast)
# Loading work.MUX2_REQ_L2(fast)
# Loading work.AddressDecoder_Resp_L2(fast)
# Loading work.hci_hwpe_interconnect(fast)
# Loading work.hci_core_intf(fast__11)
# Loading work.hci_core_assign(fast__3)
# Loading work.hci_hwpe_reorder_sv_unit(fast)
# Loading work.hci_hwpe_reorder(fast)
# Loading work.addr_dec_resp_mux(fast)
# Loading work.hci_shallow_interconnect_sv_unit(fast)
# Loading work.hci_shallow_interconnect(fast)
# Loading work.hci_core_assign(fast__4)
# Loading work.l1_spm(fast)
# Loading work.tc_sram(fast)
# Loading work.xif_inst_dispatcher(fast)
# Loading work.idma_ctrl(fast)
# Loading work.cv32e40x_if_xif(fast__5)
# Loading work.idma_reg32_3d_reg_pkg(fast)
# Loading work.idma_xif_inst_decoder(fast)
# Loading work.idma_axi_obi_transfer_ch(fast)
# Loading work.idma_reg32_3d(fast)
# Loading work.idma_reg32_3d_reg_top(fast)
# Loading work.prim_subreg(fast)
# Loading work.prim_subreg_arb(fast)
# Loading work.prim_subreg(fast__1)
# Loading work.prim_subreg_arb(fast__1)
# Loading work.prim_subreg(fast__2)
# Loading work.prim_subreg_arb(fast__2)
# Loading work.prim_subreg_ext(fast)
# Loading work.prim_subreg_ext(fast__1)
# Loading work.prim_subreg(fast__3)
# Loading work.prim_subreg_arb(fast__3)
# Loading work.rr_arb_tree(fast__2)
# Loading work.idma_transfer_id_gen(fast)
# Loading work.stream_fifo_optimal_wrap(fast)
# Loading work.spill_register_flushable(fast__3)
# Loading work.idma_nd_midend(fast)
# Loading work.idma_nd_counter(fast)
# Loading work.popcount(fast)
# Loading work.idma_backend_r_axi_w_obi(fast)
# Loading work.idma_legalizer_r_axi_w_obi(fast)
# Loading work.idma_legalizer_page_splitter(fast)
# Loading work.stream_fifo_optimal_wrap(fast__1)
# Loading work.spill_register_flushable(fast__4)
# Loading work.stream_fifo_optimal_wrap(fast__2)
# Loading work.spill_register_flushable(fast__5)
# Loading work.fall_through_register(fast)
# Loading work.fifo_v3(fast__13)
# Loading work.stream_fifo_optimal_wrap(fast__3)
# Loading work.stream_fifo(fast__8)
# Loading work.fifo_v3(fast__14)
# Loading work.idma_transport_layer_r_axi_w_obi(fast)
# Loading work.idma_axi_read(fast)
# Loading work.idma_dataflow_element(fast)
# Loading work.passthrough_stream_fifo(fast)
# Loading work.idma_obi_write(fast)
# Loading work.stream_fifo_optimal_wrap(fast__4)
# Loading work.spill_register_flushable(fast__6)
# Loading work.idma_axi_obi_transfer_ch(fast__1)
# Loading work.idma_backend_r_obi_w_axi(fast)
# Loading work.idma_legalizer_r_obi_w_axi(fast)
# Loading work.stream_fifo_optimal_wrap(fast__5)
# Loading work.spill_register_flushable(fast__7)
# Loading work.stream_fifo_optimal_wrap(fast__6)
# Loading work.spill_register_flushable(fast__8)
# Loading work.idma_transport_layer_r_obi_w_axi(fast)
# Loading work.idma_obi_read(fast)
# Loading work.idma_axi_write(fast)
# Loading work.fall_through_register(fast__1)
# Loading work.fifo_v3(fast__15)
# Loading work.axi_rw_join(fast)
# Loading work.pulp_icache_wrap(fast)
# Loading work.spill_register(fast__3)
# Loading work.spill_register_flushable(fast__9)
# Loading work.snitch_icache(fast)
# Loading work.riscv_instr_branch(fast)
# Loading work.snitch_icache_l0(fast)
# Loading work.tc_clk_inverter(fast)
# Loading work.plru_tree(fast)
# Loading work.isochronous_spill_register(fast)
# Loading work.isochronous_spill_register(fast__1)
# Loading work.l0_to_bypass(fast)
# Loading work.stream_arbiter(fast)
# Loading work.stream_arbiter_flushable(fast)
# Loading work.rr_arb_tree(fast__3)
# Loading work.fifo_v3(fast__16)
# Loading work.onehot_to_bin(fast)
# Loading work.stream_demux(fast)
# Loading work.isochronous_spill_register(fast__2)
# Loading work.isochronous_spill_register(fast__3)
# Loading work.multi_accept_rr_arb(fast)
# Loading work.rr_arb_tree(fast__4)
# Loading work.snitch_icache_lookup_serial(fast)
# Loading work.register_file_1r_1w(fast)
# Loading work.lzc(fast__4)
# Loading work.tc_sram_impl(fast)
# Loading work.tc_sram(fast__1)
# Loading work.snitch_icache_handler(fast)
# Loading work.onehot_to_bin(fast__1)
# Loading work.stream_arbiter(fast__1)
# Loading work.stream_arbiter_flushable(fast__1)
# Loading work.rr_arb_tree(fast__5)
# Loading work.stream_demux(fast__1)
# Loading work.snitch_icache_refill(fast)
# Loading work.fifo_v3(fast__17)
# Loading work.axi_xbar(fast)
# Loading work.axi_xbar_unmuxed(fast)
# Loading work.addr_decode(fast__1)
# Loading work.addr_decode_dync(fast__1)
# Loading work.axi_demux(fast)
# Loading work.spill_register(fast__4)
# Loading work.spill_register_flushable(fast__10)
# Loading work.spill_register(fast__5)
# Loading work.spill_register_flushable(fast__11)
# Loading work.spill_register(fast__6)
# Loading work.spill_register_flushable(fast__12)
# Loading work.spill_register(fast__7)
# Loading work.spill_register_flushable(fast__13)
# Loading work.spill_register(fast__8)
# Loading work.spill_register_flushable(fast__14)
# Loading work.spill_register(fast__9)
# Loading work.spill_register_flushable(fast__15)
# Loading work.axi_demux_simple(fast__1)
# Loading work.axi_demux_id_counters(fast)
# Loading work.delta_counter(fast__1)
# Loading work.counter(fast__1)
# Loading work.rr_arb_tree(fast__6)
# Loading work.lzc(fast__5)
# Loading work.axi_err_slv(fast)
# Loading work.axi_atop_filter(fast)
# Loading work.stream_register(fast)
# Loading work.fifo_v3(fast__18)
# Loading work.fifo_v3(fast__19)
# Loading work.fifo_v3(fast__20)
# Loading work.counter(fast__2)
# Loading work.delta_counter(fast__2)
# Loading work.axi_multicut(fast)
# Loading work.axi_mux(fast)
# Loading work.axi_id_prepend(fast)
# Loading work.rr_arb_tree(fast__7)
# Loading work.fifo_v3(fast__21)
# Loading work.spill_register(fast__10)
# Loading work.spill_register_flushable(fast__16)
# Loading work.spill_register(fast__11)
# Loading work.spill_register_flushable(fast__17)
# Loading work.rr_arb_tree(fast__8)
# Loading work.spill_register(fast__12)
# Loading work.spill_register_flushable(fast__18)
# Loading work.spill_register(fast__13)
# Loading work.spill_register_flushable(fast__19)
# Loading work.floo_axi_chimney(fast)
# Loading work.floo_rob_wrapper(fast)
# Loading work.axi_demux_id_counters(fast__1)
# Loading work.delta_counter(fast__3)
# Loading work.floo_rob_wrapper(fast__1)
# Loading work.floo_route_comp(fast)
# Loading work.addr_decode(fast__2)
# Loading work.addr_decode_dync(fast__2)
# Loading work.floo_wormhole_arbiter(fast)
# Loading work.floo_wormhole_arbiter(fast__1)
# Loading work.floo_meta_buffer(fast)
# Loading work.fifo_v3(fast__22)
# Loading work.lzc(fast__6)
# Loading work.floo_axi_router(fast)
# Loading work.floo_router(fast)
# Loading work.stream_fifo_optimal_wrap(fast__7)
# Loading work.spill_register_flushable(fast__20)
# Loading work.floo_route_select(fast)
# Loading work.floo_wormhole_arbiter(fast__2)
# Loading work.rr_arb_tree(fast__9)
# Loading work.floo_vc_arbiter(fast)
# Loading work.floo_router(fast__1)
# Loading work.stream_fifo_optimal_wrap(fast__8)
# Loading work.spill_register_flushable(fast__21)
# Loading work.floo_route_select(fast__1)
# Loading work.floo_wormhole_arbiter(fast__3)
# Loading work.floo_vc_arbiter(fast__1)
# Loading work.fractal_sync_xif_inst_decoder(fast)
# Loading work.fpu_ss_prd_f_pkg(fast)
# Loading work.fpu_ss(fast)
# Loading work.fpu_ss_instr_pkg(fast)
# Loading work.fpu_ss_compressed_predecoder(fast)
# Loading work.fpu_ss_predecoder(fast)
# Loading work.stream_fifo(fast__9)
# Loading work.fifo_v3(fast__23)
# Loading work.fpu_ss_decoder(fast)
# Loading work.stream_fifo(fast__10)
# Loading work.fifo_v3(fast__24)
# Loading work.fpu_ss_csr(fast)
# Loading work.fpu_ss_controller(fast)
# Loading work.fpu_ss_regfile(fast)
# Loading work.fpnew_top(fast)
# Loading work.fpnew_opgroup_block(fast)
# Loading work.fpnew_opgroup_fmt_slice(fast)
# Loading work.fpnew_fma(fast)
# Loading work.fpnew_classifier(fast__5)
# Loading work.lzc(fast__7)
# Loading work.fpnew_rounding(fast__2)
# Loading work.rr_arb_tree(fast__10)
# Loading work.lzc(fast__8)
# Loading work.fpnew_opgroup_block(fast__1)
# Loading work.fpnew_opgroup_multifmt_slice(fast)
# Loading work.fpnew_divsqrt_th_32(fast)
# Loading work.pa_fdsu_top(fast)
# Loading work.pa_fdsu_special(fast)
# Loading work.pa_fdsu_prepare(fast)
# Loading work.pa_fdsu_ff1(fast)
# Loading work.pa_fdsu_srt_single(fast)
# Loading work.gated_clk_cell(fast)
# Loading work.pa_fdsu_round_single(fast)
# Loading work.pa_fdsu_pack_single(fast)
# Loading work.pa_fdsu_ctrl(fast)
# Loading work.pa_fpu_dp(fast)
# Loading work.pa_fpu_src_type(fast)
# Loading work.pa_fpu_frbus(fast)
# Loading work.rr_arb_tree(fast__11)
# Loading work.fpnew_opgroup_block(fast__2)
# Loading work.fpnew_opgroup_fmt_slice(fast__1)
# Loading work.fpnew_noncomp(fast)
# Loading work.fpnew_classifier(fast__6)
# Loading work.rr_arb_tree(fast__12)
# Loading work.fpnew_opgroup_block(fast__3)
# Loading work.fpnew_opgroup_multifmt_slice(fast__1)
# Loading work.fpnew_cast_multi(fast__1)
# Loading work.fpnew_classifier(fast__7)
# Loading work.lzc(fast__9)
# Loading work.fpnew_rounding(fast__3)
# Loading work.rr_arb_tree(fast__13)
# Loading work.fpnew_opgroup_block(fast__4)
# Loading work.rr_arb_tree(fast__14)
# Loading work.rr_arb_tree(fast__15)
# Loading work.lzc(fast__10)
# Loading work.xif_if2struct(fast)
# Loading work.fractal_sync_pkg(fast)
# Loading work.fractal_sync_2x2_pkg(fast)
# Loading work.fractal_sync_2x2(fast)
# Loading work.fractal_sync_2x2_core(fast)
# Loading work.fractal_sync_pipeline(fast)
# Loading work.fractal_sync_1d(fast)
# Loading work.fractal_sync_rx(fast)
# Loading work.fractal_sync_fifo(fast)
# Loading work.fractal_sync_arbiter(fast)
# Loading work.fractal_sync_arbiter_fa(fast)
# Loading work.fractal_sync_tx(fast)
# Loading work.fractal_sync_fifo(fast__1)
# Loading work.fractal_sync_arbiter(fast__1)
# Loading work.fractal_sync_arbiter_fa(fast__1)
# Loading work.fractal_sync_cc(fast)
# Loading work.fractal_sync_1d_rf(fast)
# Loading work.fractal_sync_1d_local_rf(fast)
# Loading work.fractal_sync_mp_rf(fast)
# Loading work.fractal_sync_1d_remote_rf(fast)
# Loading work.fractal_sync_mp_cam_br(fast)
# Loading work.fractal_sync_mp_cam_line(fast)
# Loading work.fractal_sync_1d(fast__1)
# Loading work.fractal_sync_cc(fast__1)
# Loading work.fractal_sync_pipeline(fast__1)
# Loading work.fractal_sync_2d(fast)
# Loading work.fractal_sync_rx(fast__1)
# Loading work.fractal_sync_fifo(fast__2)
# Loading work.fractal_sync_arbiter(fast__2)
# Loading work.fractal_sync_arbiter_fa(fast__2)
# Loading work.fractal_sync_cc(fast__2)
# Loading work.fractal_sync_2d_rf(fast)
# Loading work.fractal_sync_2d_local_rf(fast)
# Loading work.fractal_sync_2d_remote_rf(fast)
# Loading work.magia_vip(fast)
# Loading work.clk_rst_gen(fast)
# Loading work.magia_l2_mem_wrapper(fast)
# Loading work.floo_axi_chimney(fast__1)
# Loading work.axi_err_slv(fast__1)
# Loading work.axi_atop_filter(fast__1)
# Loading work.stream_register(fast__2)
# Loading work.fifo_v3(fast__25)
# Loading work.fifo_v3(fast__26)
# Loading work.fifo_v3(fast__27)
# Loading work.counter(fast__3)
# Loading work.delta_counter(fast__4)
# Loading work.floo_rob_wrapper(fast__2)
# Loading work.axi_demux_id_counters(fast__2)
# Loading work.delta_counter(fast__5)
# Loading work.floo_rob_wrapper(fast__3)
# Loading work.floo_route_comp(fast__1)
# Loading work.floo_wormhole_arbiter(fast__4)
# Loading work.rr_arb_tree(fast__16)
# Loading work.floo_wormhole_arbiter(fast__5)
# Loading work.floo_meta_buffer(fast__1)
# Loading work.fifo_v3(fast__28)
# Loading work.axi_sim_mem(fast)
# Loading work.fractal_sync_if(fast__1)
# Loading work.fractal_sync_if(fast__2)
# Loading work.stream_register(fast__3)
# Loading work.hci_core_intf(fast__1)
# Loading work.hci_core_intf(fast__3)
# Loading work.stream_register(fast__1)
# Loading work.hci_core_intf(fast__10)
# Loading work.hci_mem_intf(fast__2)
# Loading work.hwpe_stream_intf_tcdm(fast__1)
# Loading work.hwpe_stream_intf_tcdm(fast__2)
# Loading work.hci_core_intf(fast__5)
# Loading work.hci_core_intf(fast__6)
# Loading work.hci_core_intf(fast__9)
# ** Warning: (vsim-3015) [PCDPC] - Port size (2) does not match connection size (3) for port 'rf_re_id_i'. The port definition is at: /scratch/visachi/magia_sdk/profiling/MAGIA/.bender/git/checkouts/cv32e40x-ba9ec2421894e746/bhv/cv32e40x_rvfi.sv(58).
#    Time: 0 ns  Iteration: 0  Instance: /magia_tb/fixture/i_magia/gen_y_tile[0]/gen_x_tile[0]/i_magia_tile/i_cv32e40x_core/rvfi_i File: /scratch/visachi/magia_sdk/profiling/MAGIA/.bender/git/checkouts/cv32e40x-ba9ec2421894e746/bhv/cv32e40x_wrapper.sv Line: 565
# ** Warning: (vsim-3015) [PCDPC] - Port size (2) does not match connection size (3) for port 'rf_re_id_i'. The port definition is at: /scratch/visachi/magia_sdk/profiling/MAGIA/.bender/git/checkouts/cv32e40x-ba9ec2421894e746/bhv/cv32e40x_rvfi.sv(58).
#    Time: 0 ns  Iteration: 0  Instance: /magia_tb/fixture/i_magia/gen_y_tile[0]/gen_x_tile[1]/i_magia_tile/i_cv32e40x_core/rvfi_i File: /scratch/visachi/magia_sdk/profiling/MAGIA/.bender/git/checkouts/cv32e40x-ba9ec2421894e746/bhv/cv32e40x_wrapper.sv Line: 565
# ** Warning: (vsim-3015) [PCDPC] - Port size (2) does not match connection size (3) for port 'rf_re_id_i'. The port definition is at: /scratch/visachi/magia_sdk/profiling/MAGIA/.bender/git/checkouts/cv32e40x-ba9ec2421894e746/bhv/cv32e40x_rvfi.sv(58).
#    Time: 0 ns  Iteration: 0  Instance: /magia_tb/fixture/i_magia/gen_y_tile[1]/gen_x_tile[0]/i_magia_tile/i_cv32e40x_core/rvfi_i File: /scratch/visachi/magia_sdk/profiling/MAGIA/.bender/git/checkouts/cv32e40x-ba9ec2421894e746/bhv/cv32e40x_wrapper.sv Line: 565
# ** Warning: (vsim-3015) [PCDPC] - Port size (2) does not match connection size (3) for port 'rf_re_id_i'. The port definition is at: /scratch/visachi/magia_sdk/profiling/MAGIA/.bender/git/checkouts/cv32e40x-ba9ec2421894e746/bhv/cv32e40x_rvfi.sv(58).
#    Time: 0 ns  Iteration: 0  Instance: /magia_tb/fixture/i_magia/gen_y_tile[1]/gen_x_tile[1]/i_magia_tile/i_cv32e40x_core/rvfi_i File: /scratch/visachi/magia_sdk/profiling/MAGIA/.bender/git/checkouts/cv32e40x-ba9ec2421894e746/bhv/cv32e40x_wrapper.sv Line: 565
# run -a
# [cv32e40x_core]: RV32                       = RV32I
# [cv32e40x_core]: A_EXT                      = A
# [cv32e40x_core]: B_EXT                      = ZBA_ZBB_ZBC_ZBS
# [cv32e40x_core]: M_EXT                      = M
# [cv32e40x_core]: DEBUG                      = 1
# [cv32e40x_core]: DM_REGION_START            = 0xf0000000
# [cv32e40x_core]: DM_REGION_END              = 0xf0003fff
# [cv32e40x_core]: DBG_NUM_TRIGGERS           = 1
# [cv32e40x_core]: PMA_NUM_REGIONS            = 0 
# [cv32e40x_core]: CLIC                       = 0
# [cv32e40x_core]: CLIC_ID_WIDTH              = 1 
# [cv32e40x_core]: X_EXT                      = 1
# [cv32e40x_core]: X_NUM_RS                   = 3
# [cv32e40x_core]: X_ID_WIDTH                 = 4 
# [cv32e40x_core]: X_MEM_WIDTH                = 32 
# [cv32e40x_core]: X_RFR_WIDTH                = 32
# [cv32e40x_core]: X_RFW_WIDTH                = 32
# [cv32e40x_core]: X_MISA                     = 0x00000020
# [cv32e40x_core]: X_ECS_XS                   = 0
# [cv32e40x_core]: NUM_MHPMCOUNTERS           = 1 
# RISC-V Trace: Using log file path defined by plusarg: log_file_0
# RISC-V Trace: Writing log to: ./core_0_traces.log
# RISC-V Trace: Using itb path defined by plusarg: itb_file
# RISC-V Trace: Loading instruction table file /scratch/visachi/magia_sdk/profiling/MAGIA//work/sw/tests/test_mm_ws.c/verif.itb
# RISC-V Trace: Loaded        2352 instructions.
# [cv32e40x_core]: RV32                       = RV32I
# [cv32e40x_core]: A_EXT                      = A
# [cv32e40x_core]: B_EXT                      = ZBA_ZBB_ZBC_ZBS
# [cv32e40x_core]: M_EXT                      = M
# [cv32e40x_core]: DEBUG                      = 1
# [cv32e40x_core]: DM_REGION_START            = 0xf0000000
# [cv32e40x_core]: DM_REGION_END              = 0xf0003fff
# [cv32e40x_core]: DBG_NUM_TRIGGERS           = 1
# [cv32e40x_core]: PMA_NUM_REGIONS            = 0 
# [cv32e40x_core]: CLIC                       = 0
# [cv32e40x_core]: CLIC_ID_WIDTH              = 1 
# [cv32e40x_core]: X_EXT                      = 1
# [cv32e40x_core]: X_NUM_RS                   = 3
# [cv32e40x_core]: X_ID_WIDTH                 = 4 
# [cv32e40x_core]: X_MEM_WIDTH                = 32 
# [cv32e40x_core]: X_RFR_WIDTH                = 32
# [cv32e40x_core]: X_RFW_WIDTH                = 32
# [cv32e40x_core]: X_MISA                     = 0x00000020
# [cv32e40x_core]: X_ECS_XS                   = 0
# [cv32e40x_core]: NUM_MHPMCOUNTERS           = 1 
# RISC-V Trace: Using log file path defined by plusarg: log_file_1
# RISC-V Trace: Writing log to: ./core_1_traces.log
# RISC-V Trace: Using itb path defined by plusarg: itb_file
# RISC-V Trace: Loading instruction table file /scratch/visachi/magia_sdk/profiling/MAGIA//work/sw/tests/test_mm_ws.c/verif.itb
# RISC-V Trace: Loaded        2352 instructions.
# [cv32e40x_core]: RV32                       = RV32I
# [cv32e40x_core]: A_EXT                      = A
# [cv32e40x_core]: B_EXT                      = ZBA_ZBB_ZBC_ZBS
# [cv32e40x_core]: M_EXT                      = M
# [cv32e40x_core]: DEBUG                      = 1
# [cv32e40x_core]: DM_REGION_START            = 0xf0000000
# [cv32e40x_core]: DM_REGION_END              = 0xf0003fff
# [cv32e40x_core]: DBG_NUM_TRIGGERS           = 1
# [cv32e40x_core]: PMA_NUM_REGIONS            = 0 
# [cv32e40x_core]: CLIC                       = 0
# [cv32e40x_core]: CLIC_ID_WIDTH              = 1 
# [cv32e40x_core]: X_EXT                      = 1
# [cv32e40x_core]: X_NUM_RS                   = 3
# [cv32e40x_core]: X_ID_WIDTH                 = 4 
# [cv32e40x_core]: X_MEM_WIDTH                = 32 
# [cv32e40x_core]: X_RFR_WIDTH                = 32
# [cv32e40x_core]: X_RFW_WIDTH                = 32
# [cv32e40x_core]: X_MISA                     = 0x00000020
# [cv32e40x_core]: X_ECS_XS                   = 0
# [cv32e40x_core]: NUM_MHPMCOUNTERS           = 1 
# RISC-V Trace: Using log file path defined by plusarg: log_file_2
# RISC-V Trace: Writing log to: ./core_2_traces.log
# RISC-V Trace: Using itb path defined by plusarg: itb_file
# RISC-V Trace: Loading instruction table file /scratch/visachi/magia_sdk/profiling/MAGIA//work/sw/tests/test_mm_ws.c/verif.itb
# RISC-V Trace: Loaded        2352 instructions.
# [cv32e40x_core]: RV32                       = RV32I
# [cv32e40x_core]: A_EXT                      = A
# [cv32e40x_core]: B_EXT                      = ZBA_ZBB_ZBC_ZBS
# [cv32e40x_core]: M_EXT                      = M
# [cv32e40x_core]: DEBUG                      = 1
# [cv32e40x_core]: DM_REGION_START            = 0xf0000000
# [cv32e40x_core]: DM_REGION_END              = 0xf0003fff
# [cv32e40x_core]: DBG_NUM_TRIGGERS           = 1
# [cv32e40x_core]: PMA_NUM_REGIONS            = 0 
# [cv32e40x_core]: CLIC                       = 0
# [cv32e40x_core]: CLIC_ID_WIDTH              = 1 
# [cv32e40x_core]: X_EXT                      = 1
# [cv32e40x_core]: X_NUM_RS                   = 3
# [cv32e40x_core]: X_ID_WIDTH                 = 4 
# [cv32e40x_core]: X_MEM_WIDTH                = 32 
# [cv32e40x_core]: X_RFR_WIDTH                = 32
# [cv32e40x_core]: X_RFW_WIDTH                = 32
# [cv32e40x_core]: X_MISA                     = 0x00000020
# [cv32e40x_core]: X_ECS_XS                   = 0
# [cv32e40x_core]: NUM_MHPMCOUNTERS           = 1 
# RISC-V Trace: Using log file path defined by plusarg: log_file_3
# RISC-V Trace: Writing log to: ./core_3_traces.log
# RISC-V Trace: Using itb path defined by plusarg: itb_file
# RISC-V Trace: Loading instruction table file /scratch/visachi/magia_sdk/profiling/MAGIA//work/sw/tests/test_mm_ws.c/verif.itb
# RISC-V Trace: Loaded        2352 instructions.
# [mhartid 0] timeslots: 2
# [mhartid 2] timeslots: 2
# [mhartid 1] timeslots: 2
# [mhartid 3] timeslots: 2
# [mhartid 0] iDMA 2D with parameter: dir=0, axi_addr=0xcc010000, obi_addr=0x20000, len=64, std=128, reps=32
# [TB][mhartid 0 - Tile (0, 0)] Detected sentinel start instruction in WB stage at time 54735ns
# [mhartid 2] iDMA 2D with parameter: dir=0, axi_addr=0xcc011000, obi_addr=0x220000, len=64, std=128, reps=32
# [TB][mhartid 2 - Tile (1, 0)] Detected sentinel start instruction in WB stage at time 55345ns
# [mhartid 3] iDMA 2D with parameter: dir=0, axi_addr=0xcc011040, obi_addr=0x320000, len=64, std=128, reps=32
# [mhartid 1] iDMA 2D with parameter: dir=0, axi_addr=0xcc010040, obi_addr=0x120000, len=64, std=128, reps=32
# [TB][mhartid 1 - Tile (0, 1)] Detected sentinel start instruction in WB stage at time 62970ns
# [TB][mhartid 3 - Tile (1, 1)] Detected sentinel start instruction in WB stage at time 62970ns
# [TB][mhartid 0 - Tile (0, 0)] Detected sentinel end instruction in WB stage at time 69415ns
# [TB][mhartid 0 - Tile (0, 0)] Detected sentinel start-end pair with latency 14675ns (2935 clock cycles)
# [TB][mhartid 2 - Tile (1, 0)] Detected sentinel end instruction in WB stage at time 70030ns
# [TB][mhartid 2 - Tile (1, 0)] Detected sentinel start-end pair with latency 14680ns (2936 clock cycles)
# [TB][mhartid 3 - Tile (1, 1)] Detected sentinel end instruction in WB stage at time 82740ns
# [TB][mhartid 3 - Tile (1, 1)] Detected sentinel start-end pair with latency 19765ns (3953 clock cycles)
# [TB][mhartid 1 - Tile (0, 1)] Detected sentinel end instruction in WB stage at time 82750ns
# [TB][mhartid 1 - Tile (0, 1)] Detected sentinel start-end pair with latency 19775ns (3955 clock cycles)
# [mhartid 0] iDMA 2D with parameter: dir=0, axi_addr=0xcc012000, obi_addr=0x20800, len=64, std=128, reps=48
# [TB][mhartid 0 - Tile (0, 0)] Detected sentinel start instruction in WB stage at time 109340ns
# [mhartid 2] iDMA 2D with parameter: dir=0, axi_addr=0xcc012040, obi_addr=0x220800, len=64, std=128, reps=48
# [TB][mhartid 2 - Tile (1, 0)] Detected sentinel start instruction in WB stage at time 110565ns
# [mhartid 3] iDMA 2D with parameter: dir=0, axi_addr=0xcc012040, obi_addr=0x320800, len=64, std=128, reps=48
# [mhartid 1] iDMA 2D with parameter: dir=0, axi_addr=0xcc012000, obi_addr=0x120800, len=64, std=128, reps=48
# [TB][mhartid 3 - Tile (1, 1)] Detected sentinel start instruction in WB stage at time 127300ns
# [TB][mhartid 1 - Tile (0, 1)] Detected sentinel start instruction in WB stage at time 127355ns
# [TB][mhartid 0 - Tile (0, 0)] Detected sentinel end instruction in WB stage at time 130735ns
# [TB][mhartid 0 - Tile (0, 0)] Detected sentinel start-end pair with latency 21390ns (4278 clock cycles)
# [TB][mhartid 2 - Tile (1, 0)] Detected sentinel end instruction in WB stage at time 132000ns
# [TB][mhartid 2 - Tile (1, 0)] Detected sentinel start-end pair with latency 21430ns (4286 clock cycles)
# [TB][mhartid 3 - Tile (1, 1)] Detected sentinel end instruction in WB stage at time 156315ns
# [TB][mhartid 3 - Tile (1, 1)] Detected sentinel start-end pair with latency 29010ns (5802 clock cycles)
# [TB][mhartid 1 - Tile (0, 1)] Detected sentinel end instruction in WB stage at time 156390ns
# [TB][mhartid 1 - Tile (0, 1)] Detected sentinel start-end pair with latency 29030ns (5806 clock cycles)
# [mhartid 0] iDMA 2D with parameter: dir=0, axi_addr=0xcc015000, obi_addr=0x21400, len=64, std=128, reps=48
# [TB][mhartid 0 - Tile (0, 0)] Detected sentinel start instruction in WB stage at time 169940ns
# [TB][mhartid 0 - Tile (0, 0)] Detected sentinel end instruction in WB stage at time 191285ns
# [TB][mhartid 0 - Tile (0, 0)] Detected sentinel start-end pair with latency 21340ns (4268 clock cycles)
# [mhartid 1] iDMA 2D with parameter: dir=0, axi_addr=0xcc015040, obi_addr=0x121400, len=64, std=128, reps=48
# [TB][mhartid 1 - Tile (0, 1)] Detected sentinel start instruction in WB stage at time 200065ns
# [TB][mhartid 1 - Tile (0, 1)] Detected sentinel end instruction in WB stage at time 229180ns
# [TB][mhartid 1 - Tile (0, 1)] Detected sentinel start-end pair with latency 29110ns (5822 clock cycles)
# [mhartid 0] RedMulE with parameter: x=0x20800, w=0x20000, y=0x21400, m=48, n=32, k=32
# [TB][mhartid 0 - Tile (0, 0)] Detected sentinel start instruction in WB stage at time 230200ns
# [TB][mhartid 0 - Tile (0, 0)] Detected sentinel end instruction in WB stage at time 233100ns
# [TB][mhartid 0 - Tile (0, 0)] Detected sentinel start-end pair with latency 2895ns (579 clock cycles)
# [mhartid 0] LAST TIMESLOT
# [mhartid 2] iDMA 1D with parameter: dir=0, axi_addr=0x21400, obi_addr=0x221400, len=3072
# [TB][mhartid 2 - Tile (1, 0)] Detected sentinel start instruction in WB stage at time 264385ns
# [mhartid 1] RedMulE with parameter: x=0x120800, w=0x120000, y=0x121400, m=48, n=32, k=32
# [TB][mhartid 1 - Tile (0, 1)] Detected sentinel start instruction in WB stage at time 274115ns
# [mhartid 0] iDMA 2D with parameter: dir=0, axi_addr=0xcc013800, obi_addr=0x20800, len=64, std=128, reps=48
# [TB][mhartid 0 - Tile (0, 0)] Detected sentinel start instruction in WB stage at time 276830ns
# [TB][mhartid 1 - Tile (0, 1)] Detected sentinel end instruction in WB stage at time 277045ns
# [TB][mhartid 1 - Tile (0, 1)] Detected sentinel start-end pair with latency 2925ns (585 clock cycles)
# [mhartid 1] LAST TIMESLOT
# [TB][mhartid 0 - Tile (0, 0)] Detected sentinel end instruction in WB stage at time 298195ns
# [TB][mhartid 0 - Tile (0, 0)] Detected sentinel start-end pair with latency 21360ns (4272 clock cycles)
# [TB][mhartid 2 - Tile (1, 0)] Detected sentinel end instruction in WB stage at time 309550ns
# [TB][mhartid 2 - Tile (1, 0)] Detected sentinel start-end pair with latency 45160ns (9032 clock cycles)
# [mhartid 3] iDMA 1D with parameter: dir=0, axi_addr=0x121400, obi_addr=0x321400, len=3072
# [TB][mhartid 3 - Tile (1, 1)] Detected sentinel start instruction in WB stage at time 312320ns
# [mhartid 1] iDMA 2D with parameter: dir=0, axi_addr=0xcc013800, obi_addr=0x120800, len=64, std=128, reps=48
# [TB][mhartid 1 - Tile (0, 1)] Detected sentinel start instruction in WB stage at time 326250ns
# [mhartid 0] iDMA 2D with parameter: dir=0, axi_addr=0xcc016800, obi_addr=0x22000, len=64, std=128, reps=48
# [TB][mhartid 0 - Tile (0, 0)] Detected sentinel start instruction in WB stage at time 337545ns
# [mhartid 2] RedMulE with parameter: x=0x220800, w=0x220000, y=0x221400, m=48, n=32, k=32
# [TB][mhartid 2 - Tile (1, 0)] Detected sentinel start instruction in WB stage at time 350285ns
# [TB][mhartid 2 - Tile (1, 0)] Detected sentinel end instruction in WB stage at time 353175ns
# [TB][mhartid 2 - Tile (1, 0)] Detected sentinel start-end pair with latency 2885ns (577 clock cycles)
# [TB][mhartid 1 - Tile (0, 1)] Detected sentinel end instruction in WB stage at time 355255ns
# [TB][mhartid 1 - Tile (0, 1)] Detected sentinel start-end pair with latency 29000ns (5800 clock cycles)
# [TB][mhartid 3 - Tile (1, 1)] Detected sentinel end instruction in WB stage at time 357530ns
# [TB][mhartid 3 - Tile (1, 1)] Detected sentinel start-end pair with latency 45205ns (9041 clock cycles)
# [TB][mhartid 0 - Tile (0, 0)] Detected sentinel end instruction in WB stage at time 359245ns
# [TB][mhartid 0 - Tile (0, 0)] Detected sentinel start-end pair with latency 21695ns (4339 clock cycles)
# [mhartid 2] iDMA 2D with parameter: dir=1, axi_addr=0xcc015000, obi_addr=0x221400, len=64, std=128, reps=48
# [TB][mhartid 2 - Tile (1, 0)] Detected sentinel start instruction in WB stage at time 393035ns
# [mhartid 0] RedMulE with parameter: x=0x20800, w=0x20000, y=0x22000, m=48, n=32, k=32
# [TB][mhartid 0 - Tile (0, 0)] Detected sentinel start instruction in WB stage at time 395170ns
# [TB][mhartid 0 - Tile (0, 0)] Detected sentinel end instruction in WB stage at time 397945ns
# [TB][mhartid 0 - Tile (0, 0)] Detected sentinel start-end pair with latency 2770ns (554 clock cycles)
# [mhartid 1] iDMA 2D with parameter: dir=0, axi_addr=0xcc016840, obi_addr=0x122000, len=64, std=128, reps=48
# [TB][mhartid 1 - Tile (0, 1)] Detected sentinel start instruction in WB stage at time 398960ns
# [mhartid 3] RedMulE with parameter: x=0x320800, w=0x320000, y=0x321400, m=48, n=32, k=32
# [TB][mhartid 2 - Tile (1, 0)] Detected sentinel end instruction in WB stage at time 402825ns
# [TB][mhartid 2 - Tile (1, 0)] Detected sentinel start-end pair with latency 9785ns (1957 clock cycles)
# [TB][mhartid 3 - Tile (1, 1)] Detected sentinel start instruction in WB stage at time 402885ns
# [TB][mhartid 3 - Tile (1, 1)] Detected sentinel end instruction in WB stage at time 405830ns
# [TB][mhartid 3 - Tile (1, 1)] Detected sentinel start-end pair with latency 2940ns (588 clock cycles)
# [mhartid 2] LAST TIMESLOT
# [TB][mhartid 1 - Tile (0, 1)] Detected sentinel end instruction in WB stage at time 427940ns
# [TB][mhartid 1 - Tile (0, 1)] Detected sentinel start-end pair with latency 28975ns (5795 clock cycles)
# [mhartid 2] iDMA 2D with parameter: dir=0, axi_addr=0xcc013840, obi_addr=0x220800, len=64, std=128, reps=48
# [TB][mhartid 2 - Tile (1, 0)] Detected sentinel start instruction in WB stage at time 445860ns
# [mhartid 3] iDMA 2D with parameter: dir=1, axi_addr=0xcc015040, obi_addr=0x321400, len=64, std=128, reps=48
# [TB][mhartid 3 - Tile (1, 1)] Detected sentinel start instruction in WB stage at time 449560ns
# [TB][mhartid 3 - Tile (1, 1)] Detected sentinel end instruction in WB stage at time 462445ns
# [TB][mhartid 3 - Tile (1, 1)] Detected sentinel start-end pair with latency 12880ns (2576 clock cycles)
# [mhartid 3] LAST TIMESLOT
# [mhartid 1] RedMulE with parameter: x=0x120800, w=0x120000, y=0x122000, m=48, n=32, k=32
# [TB][mhartid 1 - Tile (0, 1)] Detected sentinel start instruction in WB stage at time 468690ns
# [TB][mhartid 2 - Tile (1, 0)] Detected sentinel end instruction in WB stage at time 471070ns
# [TB][mhartid 2 - Tile (1, 0)] Detected sentinel start-end pair with latency 25205ns (5041 clock cycles)
# [TB][mhartid 1 - Tile (0, 1)] Detected sentinel end instruction in WB stage at time 471465ns
# [TB][mhartid 1 - Tile (0, 1)] Detected sentinel start-end pair with latency 2770ns (554 clock cycles)
# [mhartid 2] iDMA 1D with parameter: dir=0, axi_addr=0x22000, obi_addr=0x222000, len=3072
# [TB][mhartid 2 - Tile (1, 0)] Detected sentinel start instruction in WB stage at time 501580ns
# [mhartid 3] iDMA 2D with parameter: dir=0, axi_addr=0xcc013840, obi_addr=0x320800, len=64, std=128, reps=48
# [TB][mhartid 3 - Tile (1, 1)] Detected sentinel start instruction in WB stage at time 510035ns
# [TB][mhartid 3 - Tile (1, 1)] Detected sentinel end instruction in WB stage at time 539015ns
# [TB][mhartid 3 - Tile (1, 1)] Detected sentinel start-end pair with latency 28975ns (5795 clock cycles)
# [TB][mhartid 2 - Tile (1, 0)] Detected sentinel end instruction in WB stage at time 545940ns
# [TB][mhartid 2 - Tile (1, 0)] Detected sentinel start-end pair with latency 44355ns (8871 clock cycles)
# [mhartid 3] iDMA 1D with parameter: dir=0, axi_addr=0x122000, obi_addr=0x322000, len=3072
# [TB][mhartid 3 - Tile (1, 1)] Detected sentinel start instruction in WB stage at time 573265ns
# [mhartid 2] RedMulE with parameter: x=0x220800, w=0x220000, y=0x222000, m=48, n=32, k=32
# [TB][mhartid 2 - Tile (1, 0)] Detected sentinel start instruction in WB stage at time 583660ns
# [TB][mhartid 2 - Tile (1, 0)] Detected sentinel end instruction in WB stage at time 586435ns
# [TB][mhartid 2 - Tile (1, 0)] Detected sentinel start-end pair with latency 2770ns (554 clock cycles)
# [TB][mhartid 3 - Tile (1, 1)] Detected sentinel end instruction in WB stage at time 617625ns
# [TB][mhartid 3 - Tile (1, 1)] Detected sentinel start-end pair with latency 44355ns (8871 clock cycles)
# [mhartid 2] iDMA 2D with parameter: dir=1, axi_addr=0xcc016800, obi_addr=0x222000, len=64, std=128, reps=48
# [TB][mhartid 2 - Tile (1, 0)] Detected sentinel start instruction in WB stage at time 626080ns
# [TB][mhartid 2 - Tile (1, 0)] Detected sentinel end instruction in WB stage at time 635625ns
# [TB][mhartid 2 - Tile (1, 0)] Detected sentinel start-end pair with latency 9540ns (1908 clock cycles)
# [mhartid 0] Tile 0 returned.
# [mhartid 3] RedMulE with parameter: x=0x320800, w=0x320000, y=0x322000, m=48, n=32, k=32
# [TB][mhartid 3 - Tile (1, 1)] Detected sentinel start instruction in WB stage at time 658645ns
# [TB][mhartid 3 - Tile (1, 1)] Detected sentinel end instruction in WB stage at time 661420ns
# [TB][mhartid 3 - Tile (1, 1)] Detected sentinel start-end pair with latency 2770ns (554 clock cycles)
# [mhartid 3] iDMA 2D with parameter: dir=1, axi_addr=0xcc016840, obi_addr=0x322000, len=64, std=128, reps=48
# [TB][mhartid 3 - Tile (1, 1)] Detected sentinel start instruction in WB stage at time 704900ns
# [TB][mhartid 3 - Tile (1, 1)] Detected sentinel end instruction in WB stage at time 717455ns
# [TB][mhartid 3 - Tile (1, 1)] Detected sentinel start-end pair with latency 12550ns (2510 clock cycles)
# [mhartid 1] Tile 1 returned.
# [mhartid 2] Number of errors: 0
# [mhartid 2] Tile 2 returned.
# [mhartid 3] Number of errors: 0
# [mhartid 3] Tile 3 returned.
# SIMULATION FINISHED WITH EXIT CODE: 800080008000800
# 
# ** Note: $finish    : /scratch/visachi/magia_sdk/profiling/MAGIA/target/sim/src/mesh/magia_tb.sv(51)
#    Time: 1562030 ns  Iteration: 0  Instance: /magia_tb
# End time: 14:18:25 on Sep 16,2025, Elapsed time: 0:03:46
# Errors: 0, Warnings: 4
make[1]: Leaving directory `/scratch/visachi/magia_sdk/profiling/MAGIA'
